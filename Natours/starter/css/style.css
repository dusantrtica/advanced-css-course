/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/*
box-sizing nije property koji se nasledjuje (?), ali ovako mi ga setujemo na html i onda kazmo preko
* selektora da svi elementi treba da naslede ovaj property.
*/
*,
*::after,
*::before {
    margin: 0;
    padding: 0;    
    box-sizing: inherit;
}

/* root font size se stavlja u procentima, zbog toga sto korisnik moze da promeni velicinu fonta u browseru.
Ako bismo zakucali na 10px, onda promena fonta u browseru, ce ispravno da skalira ostale elemente*/
html {
    font-size: 62.5%;
}

body {
    font-family: "Lato", sans-serif;
    font-weight: 400;    
    font-size: 1.6rem;
    line-height: 1.7;
    color: #777;
    padding: 3rem;
    box-sizing: border-box;
}

/* 95% velicine viewporta*/
.header {
    position: relative;
    height: 95vh;
    background-image: linear-gradient(
        to right bottom,
         rgba(126, 213, 111, 0.8),
         rgba(40, 180, 133, 0.8)
         ), url('../img/hero.jpg');
    background-size: cover; /* da bude slika skalirana i da zauzima celu povrsinu*/
    background-position: top; /* da prilepimo sliku iz vrh stranice. tako da je bottom odsecena ako treba da se odsece*/
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);    
}

.header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.header__logo {
    height: 3.5rem; /* width will be fixed automatically */        
}

.header__logo:hover {
    animation: rotation 0.5s;
}

.header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;

    /* ovo je fix za shaking koji se desava iz nepoznatog razloga na kraju animacije, mozda i nije potrebno. */
    backface-visibility: hidden;

    margin-bottom: 1.5rem;
}

.heading-primary--main {
   display: block;
   font-size: 6rem;
   font-weight: 400;
   letter-spacing: 3.5rem;
   animation: moveInLeft 1s ease-out;   
}

.heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.74rem;
    animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem)
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem)
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

/* ovo je samo zabave radi, ne treba nam za ovaj projekat*/
@keyframes rotation {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(3rem);
    }

    80% {
        transform: translateY(-0.5rem);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

/* link pseudo class, state of an element */
/* da je ostao kao inline element, onda bi zauzimao mesta 
teksta koji je iznad, i zato moramo da ga stavimo kao block
uvek, ako hocemo da dajemo neke margine ili paddinge elementu treba da ga
deklarisemo kao block ili inline-block, inace naraste preko gornjeg elementa.
Da bismo stavili ga stavili u centar, mozemo raditi kao postion absolute i transform, ali
to je over kill, umesto toga, posto je block inline element, mozemo sa
text align center da to postignemo*/
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2s;
    position: relative; /* ovo nam treba da bismo :after element
    pozicionirali iza dugmeta tj. da se ne vidi*/    
}

.btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0, 0, 0, .2);
}

/* ovo je kad kliknemo */
.btn:active {
    transform: translateY(-0.1rem); 
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, .2);
}

.btn--white {
    background-color: #fff;
    color: #777;
}

/* Pseudo element je se tretira kao child elementa. Hocemo 
da se ovaj after pokaze tacno iza dugmeta. A to postizemo tako sto imamo after.
koji izgleda isto kao dugme. zauzima celu povrsinu elementa, sa 100% w/h
Da bismo ga stavili tacno iza dugmeta, to moramo da pozicioniramo apsolutno
*/
.btn::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;    
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn--white::after {
    background-color: #fff;    
}

/*Strava fora za strafa efekat! Kao raste dugme ali u isto vreme
nestaje, pa dobijamo jako lep efekat*/
.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn--animated {
    animation: moveInBottom 0.5s ease-out 0.75s;
    animation-fill-mode: backwards;
    /* ovde nam treba, da bi inicijalno primenio stil koji animacija ima
    na 0% pre nego sto animacija pocne, a to je opacity:0 itd. */
}
